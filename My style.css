@import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@300;400;700&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Dancing+Script:wght@400;600;700&display=swap');
*{  
    padding: 0;
    margin: 0;
    box-sizing: border-box;
}
html{
    font-size: 10px;
    font-family: 'Montserrat', sans-serif;
    width: 100%;
}
a{
    text-decoration: none;
}
img{
    /* Common for all images to fit their parent classes to a 100% */
    height: 100%;
    width: 100%;
    object-fit: cover;
}
p{
    margin-top: 5px;
    letter-spacing: .05rem ;
    line-height: 2.5rem;
    font-size: 1.5em;
    font-weight: 200;
    color: black;
}

/*  Adjusting the text so that it becomes on the center of the screen */
.container{
    min-height: 100vh;
    width: 100%;
    /* Use flex to use the attributes below it */
    display: flex;
    align-items:center;
    justify-content: center;
    
}
.section-title{
    text-transform: uppercase;
    font-size: 4em;
    font-weight: 400;
    margin-bottom: 10px;
    
 }
 .section-title span{
     color: crimson;
 }
.cta{
    display: inline-block;
    /* The first value sets the top-bottom padding and the second sets the right-left padding */
    padding: 10px 30px;
    color:white;
    background-color: transparent;
    border: crimson 2px solid;
    font-size: 2em;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: .1rem;
    margin-top: 30px;
    /* This is activated if any action is applied to the element i.e the background color and color will change. Just like hovering below */
    transition: .4s ease;
    /* If all is applied to the transition shorthand above, everything about the element will be transitioned during an action
    So, define the aspects you want changed below
     */
    transition-property: background-color, color;
}
.cta:hover{
    color:white;
    background-color: crimson;
     
    font-family: Arial;
}
.brand h1{
    color:white;
    text-transform: uppercase;
    font-size: 3em;
}
.brand h1 span{
    color:crimson;
}
/* Hero section */  
#hero{
    background-image: url('./img/hero-bg.png');
    background-size: cover;
    background-position: top center;
    position: relative;

    /* you can't use the linear gradient here and then use the opacity to blur it, because it will blur the whole section. Thus create a psuedoclass for it. */
    /* 
    background-image: linear-gradient(to right, #eaee44,#33d0ff); 
    opacity: .7;
    */
    z-index: 1;
    
    
}
#hero .hero{
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 100px;
    /* This puts the elemets to the beginning of the page */
    justify-content: flex-start;
}

#hero::after{
    content: "";
    position: absolute;
    display: block;
    left: 0;
    top: 0;
    height: 100%;
    width: 100%;
    background-color: black;
    opacity: 0.7;
    /* The z-index doesn't work if it is 0. Why? Don't know */
    z-index: -1;
    /* Messing around with the color */
    /*
        background-image: linear-gradient(to right, #eaee44,#33d0ff);
        mix-blend-mode:darken; 
    */
}
#hero h1{
    display: block;
    width: fit-content;
    font-size: 4em;
    position: relative;
    /* This is because we want a text-appear animation and the text should be revealed after the animation is complete */
    color:transparent;
    /* In order for the text to appear as soon as the box disappears, the total time taken must be equal
    Experiment around, but its best if the text begins to appear after the box has spent about 75% of its duration */
    animation: text_appear .5s ease-in forwards;
    animation-delay: 1s;    
}
/* A quick breakdown: note that this was done for 1s in the text_reveal_box animation. Scale accordingly
 First the text reveal box animation starts 1s after the page has reloaded. Then, the text_reaveal animation goes on for 1s.
 The text appear animation starts .5s into the text_box_appear animation and then lasts for .5s making the cycle last 2s.
 Now, the box_reveal animation delay is 2s, meaning just after the end of the 1st cycle. The animation starts just as the 1st cycle ends
 and the text_appear animation starts .5 seconds after that or 2.5s in total and lasts for .5s making the 2nd cycle last 2s and the whole thing for 4s.
 Same logic for the 3rd cycle */

#hero h1:nth-child(1){
    animation-delay: 1s;
}
#hero h1:nth-child(2){
    
    animation-delay: 2s;
}
#hero h1:nth-child(3){
    animation: crimson_appear .5s ease-in forwards;
    animation-delay: 3s;
}
#hero h1 span{
    /* This is used to make the transitions for the letters of the h1 tag
    The spans take up all the space of the h1 tag */
    position: absolute;
    top: 0;
    left:0;
    background-color: crimson;
    /* This width is zero because after the animation, you still want the original text shown
    Since the span covers that, it needs to be zero after the animation is complete. */

    width: 0;
    height: 100%;
    animation: text_reveal_box 1s ease;
    animation-delay: .5s;
}
/* The dealy in their text_box_reveal animation must also be delayed
Each should take place 1s after the other */
#hero h1:nth-child(1) span{
    animation-delay:.5s;    
}
#hero h1:nth-child(2) span{
 
    animation-delay: 1.5s; 
}
#hero h1:nth-child(3) span{
    animation-delay: 2.5s; 
}
/* Using this to style all links, copy to the top */
/* #hero .cta{
    display: inline-block;
    /* The first value sets the top-bottom padding and the second sets the right-left padding 
    padding: 10px 30px;
    color:white;
    background-color: transparent;
    border: crimson 2px solid;
    font-size: 2em;
    text-transform: uppercase;
    letter-spacing: .1rem;
    margin-top: 30px;
    /* This is activated if any action is applied to the element i.e the background color and color will change. Just like hovering below
    transition: .4s ease;
    /* If all is applied to the transition shorthand above, everything about the element will be transitioned during an action
    So, define the aspects you want changed below
     
    transition-property: background-color, color;
} 
#hero .cta:hover{
    color:white;
    background-color: crimson;
    border-radius: 5px;
    font-family: Arial;
}
/* End of Hero section */

/* Sevice Section */

 #services .services{
     flex-direction: column;
     text-align: center;
     margin: 0 auto;
     padding: 100px 0;
     max-width: 1200px;
 }
 /* #services .service-top .section-title{
     /* This will be taken as a template so that every section title has the same styling 
    text-transform: uppercase;
    font-size: 4em;
    font-weight: 400;
    margin-bottom: 10px;
    text-align: center;
 }
 #services .service-top span{
     color: crimson;
 } */
 /* #services .service-top p{
    /* We are putting this styling to all paragraphs. Copy and paste above
     margin-top: 5px;
     letter-spacing: .05rem;
     line-height: 2.5rem;
     font-size: 1.5em;
     font-weight: 200;
     color: black;
 } */
 #services .service-bottom{
    display: flex;
    flex-direction: row;
    position: relative;
    flex-wrap: wrap;
    margin-top: 50px;   
    justify-content: center; 
}
#services .service-bottom .service-item{
        /* Inside the picture*/
    position: relative;
    display: flex;
    flex-basis: 80%;
    flex-direction: column;
    padding: 30px;
    margin: 10px 5%;    
    align-items: flex-start;
    justify-content: center;
    background-image: url('./img/img-1.png');
    border-radius: 10px;
    background-size: cover;
    z-index: 1;
}
#services .service-bottom .service-item ::after{
    content: '';
    position: absolute;
    left: 0;
    top:0;
    height: 100%;
    width: 100%;
    border-radius: 10px;
    background-image: linear-gradient(60deg, #29323c 0%,#485563 100%);
    opacity: .4;
    z-index: -1;
}
#services .service-bottom .icon{
    /* Editing the block and not the image itself */
    height: 80px;
    width: 80px;
    margin-bottom: 20px;

}
/* #services .service-bottom .icon img{
    Fitting the image in the block above. We need all the images to fit at a 100% width and height to their parent divs. i.e. put this up and in the common section at the top of the page
    height: 100%;
    width: 100%;
    object-fit: cover;
}
*/
#services .service-item h2{
    font-size: 2.5em;
    color: white;
    margin-bottom: 10px;
    text-transform: uppercase;
}
#services .service-item p{
    text-align: left; 
    color: white;
}

/* End of Sevice Section */


/* Start of Projects section */
#projects .projects{
    flex-direction: column;
    max-width: 1200px;
    margin: 0 auto;
    padding: 100px 0;
}
#projects .project-header h1{
    margin-bottom: 50px;
}
#projects .all-projects{
    display:flex;
    flex-flow: column wrap;
    align-items: center;
    justify-content: center;
}
#projects .project-item{
    /* The elements in the project-item div will be aligned vertically i.e. project-info and project-img
    But the div will be aligned vertically with other divs in all-projects */
    display: flex;
    flex-flow: column;
    justify-content: center;
    align-items: center;
    width: 80%;
    margin: 20px auto;
    overflow: hidden ;
    /* This is for the border of the div. Increase the value to see the changes
    i.e. the part of the div that state 'Project 1' will be curved */
    border-radius: 10px;
}
#projects .project-info{
    padding: 30px;
    flex-basis: 50%;
    background-image: linear-gradient(60deg, #29323c 0%, #485563 100%);
    height:100%;
    display: flex;
    align-items: flex-start;
    justify-content: center;
    flex-direction: column;
    color: white;
    /* Paragraph won't be colored white because of the common styling above */
}
#projects .project-info p{
    /* Overwriting default black */
    color: white;
}
#projects .project-info h1{
    font-size: 4em;
    font-weight: 500;
}
#projects .project-info h2{
    font-weight: 500;
    font-size: 1.8em;
    margin-top: 10px;

}
#projects .project-item .project-img{
    flex-basis: 50%;
    overflow: hidden;
    height: 300px;
    position: relative;
    
}
#projects .project-item .project-img::after{
    content:'';
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
    background-image: linear-gradient(60deg, #29323c 0%, #485563 100%);
    opacity: .7;
}
#projects .project-item .project-img img{
    /* Delay .3 sec in an ease style for the effect transition only */
    transition: .3s ease transform;
}
#projects .project-item:hover .project-img img{
    transform: scale(1.1);

}
/* End of Projects section */
/* Start of About me section */
#about .about{
    /* In the column view, the picture should come after the about me */
    flex-direction: column-reverse;
    text-align: center; 
    max-width: 1200px;
    margin: 0 auto;
    padding: 100px 20px;
}
#about .col-left{
    width: 250px;
    height: 360px;
}
#about .col-right{
    width: 100%;

}
#about .col-right h2{
    font-size: 1.8em;
    font-weight: 600;
    letter-spacing: .2rem;
    margin-bottom: 10px;
}
#about .col-right p{
    margin-bottom: 20px;
}
#about .cta{
    color:black;
    margin-bottom: 50px;
    padding: 10px 20px;
    font-size: 2em;
}
#about .col-left .about-img {
    height: 100%;
    width: 100%;
    position: relative;
    border: white solid 7px;
}
#about .col-left .about-img::after{
    content: '';
    position: absolute;
    left: -33px;
    top: 19px;
    width: 98%; 
    height: 98%;
    border: crimson solid 7px;
    z-index: -1;

}
/* End of about me section */

/* Start of Contact section */
#contact .contact{
    flex-direction: column;
    max-width: 1200px;
    margin: 0 auto;
}
#contact .contact-items{
    width: 400px;
}
#contact .contact-items .item{
    width: 80%;
    padding: 30px;
    margin: 30px;
    text-align: center;
    border-radius: 10px;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    box-shadow: 0px 0px 18px 0 #0000002c;
    transition: .3s ease transform;
}
#contact .contact-items .item:hover{
    transform: scale(1.1);
    box-shadow: 0px 0px 28px 0 #0000002c;
}
#contact .item .icon{
    height: 64px;
    width: 64px;
    margin-bottom: 20px;
}
#contact .contact-items .item h1{
    font-size: 2.5em;
    font-weight: 500;
    margin-bottom: 5px;
}
#contact .contact-items .item h2{
    font-weight: 500;
    font-size: 1.3em;
    line-height: 2rem;
    margin-bottom: 5px;
}
/* End of Contact section */
/* Start of footer section */
#footer{
    background-image: linear-gradient(60deg, #29323c 0%, #485563 100%);
}
#footer .footer{
    flex-direction: column;
    min-height: 200px;
    padding-top:50px;
    
}
/* #footer .footer .brand h1{
    Styled in the common
    font-family: Arial, Helvetica, sans-serif;
    color:white;
} */
#footer .footer h2{
    color:white;
    font-size: 1.8em;
    letter-spacing: .1em;
    font-weight: 500;
    margin-bottom: 20px;
    margin-top: 10px;
}

#footer .footer-icons{
    display: flex;
    flex-direction: row;
    margin-bottom: 20px;
}
#footer .footer-icons .icons{
    margin:0 15px;
    height: 30px;
    width: 30px;
}
#footer .footer-icons .icons img{
    filter: grayscale(1);
    transition: .3s ease;
    transition-property: filter, transform;
}
#footer .footer-icons .icons:hover img{
    filter: grayscale(0);
    transform: scale(1.08);
}
#footer .footer .copyright p{
    color: white;
    font-size: 1.5em;
}

/* End of footer section */





/* KeyFrames */ 
/* This is an animation command that specifies how the animation takes place. */
@keyframes text_reveal_box{
   
    /* The 0% or the start time or the 'to' factor of the animation is set to the default  
    i.e. you'd get the same result if you add 
    0%{
        width: 0%;
        left:0;
    }*/
    /* 0% is the beginning, 25% is a quarter of the duration, 50% is half, and 100% is the completion of the animation */
    50%{
        width: 100%;
        left:0;
    }

    100%{
        width: 0%;
        left: 100%;
    }   
}
@keyframes text_appear{
    /* The text should be given a color when the animation is complete. */
    100%{
        color: white;
        
    }
    
}
@keyframes crimson_appear{
    100%{
        color:crimson;
        font-weight: 500%;
    }
}

/* End of KeyFrames */
/* Media query for tablets */
/* This is to make the design responsive for phones tablets laptops and desktops based on the screen size 
phones: max-width: 480p
tablets: max-width: 768p
laptops: max-width: 1024p
desktops: max-width: 1200p*/
/* This is for laptops, i.e. the min-width can't be less than 768px */
@media only screen and (min-width:768px){
    /* For buttons */
.cta{
    font-size: 2.5em;
    padding:20px 60px;
}
/* For headers */
.section-title{
font-size: 5em;
}
/* Specifically for the header in the image on the beginning */
#hero h1{
font-size: 7em ;

}
/* For the services */
#services .services .service-bottom .service-item{
/* This is for tablets, and so, two elements on the screen */
/* Set each element to 45% of its parent's width, then give them a margin to fit a 100% 
Note that if margin isn't written, they will remain in columns with reduced width because of the flex-wrap property defined above*/
flex-basis: 45%;
margin: 2.5%;
}
/* For the projects */

#projects .project-info{
height: 100%;
}
#projects .project-item{
flex-direction: row;
border-radius: 0px;
margin: 0;
width: 100%;
height: 400px;
}
#projects .project-item .project-img{
height: 100%;   
}
#projects .project-item:nth-child(even){
flex-direction: row-reverse;
}
/* About me */
#about .about{
    flex-direction: row;    
}
#about .about .col-left{
    padding-left: 50px;
    width: 600px;
    height: 400px;


}
#about .about .col-left .about-img::after{
    left: -45px;
    top: 34px;
    border: crimson solid 10px;
    height: 98%;
    width: 98%;    
}
#about .about .col-right{
    text-align:left;
    padding: 30px;
}
/* Contact */
#contact .contact .contact-items{
    flex-direction: row;
    width: 30%;
    margin: 1%;
    justify-content: flex-start;
    padding: 1%;
}
}
/* End of Media Query for tablets */